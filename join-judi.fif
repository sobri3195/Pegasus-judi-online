#!/usr/bin/env fift -s
"gamble-utils.fif" include

{ ."<game-id> [<key-name> <ticket-count>] [-O <output-boc>]" cr
  ."Prepares an internal message body to buy <ticket-count> tickets (by default 1) in a game <game-id>," cr
  ."with a key to be used to sign future moves loaded from or saved to <key-name>.pk ('game-entry.pk' by default)."
} : usage()

// == Parsing command-line arguments

0 =: GameId
"game-entry" =: KeyName
"join-query" =: SaveFile
1 =: TicketCount
{
  "-O" "--output-file" 1 { =: SaveFile } option-long()

  1 { parse-int =: GameId } nth-argument()
  2 { =: KeyName } nth-argument()
  3 { parse-int =: TicketCount } nth-argument()
} scan-args()
1 < { show-usage() } if // Checks that there's enough arguments

// == End of parsing command-line arguments

."Joining a game #" GameId . cr

KeyName +".pk" load-generate-keypair
=: PrivateKey
=: PublicKey

// Pack the internal message into a request data structure to be signed
<b
  100 32 u,     // op, 100 = place a bid
  now 64 u,     // query_id
  GameId 32 u,
  PublicKey B,
  TicketCount 32 u,
b> =: MessageBody

."Internal message body: " MessageBody <s csr. cr
MessageBody 2 boc+>B dup Bx. cr
SaveFile +".boc" tuck B>file
."(Saved to file " type .")" cr
