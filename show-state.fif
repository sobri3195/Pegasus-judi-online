#!/usr/bin/env fift -s
"gamble-utils.fif" include

{
  ."<data-boc>" cr
  ."Displays data stored within the persisting storage of a game contract."
} : usage()

// == Parsing command-line arguments

{
  1 { =: BaseFile } nth-argument()
  no-more-arguments()
} scan-args()
1 < { show-usage() } if // Checks that there's enough arguments

// == End of parsing command-line arguments

."Loading state from " BaseFile +".boc" type cr cr

BaseFile +".boc" file>B B>boc =: ContractData
."Raw data: " cr ContractData <s csr. cr

ContractData parse-data()
=: Games =: ReservedBalance =: OwnerPubkey =: SeqNo

."Data:" cr
."  seqno:             " SeqNo . cr
."  owner_pubkey:      " OwnerPubkey Bx. cr
."  reserved_balance:  " ReservedBalance .GR cr

."  games:" cr
Games 32 {
  ."    #" swap ._ .":" cr
  8 u@+ over  ."    ┌  game_type:     " . cr
  64 u@+ swap ."    │  game_flags:    " dup .
    0x8000000000000000 and {
      ."(archived)"
    } if
   cr
  32 u@+ swap ."    │  start_time:    " . cr
  32 u@+ swap ."    │  end_time:      " . cr
  32 u@+ swap ."    │  min_tickets:   " . cr
  32 u@+ swap ."    │  max_tickets:   " . cr
  32 u@+ swap ."    │  cur_tickets:   " . cr
  Gram@+ swap ."    │  ticket_price:  " .GR cr
  Gram@+ swap ."    │  prize_fund:    " .GR cr
  32 u@+ swap ."    │  repeat_count:  " . cr
  32 u@+ swap ."    │  repeat_delay:  " . cr
              ."    │" cr
              ."    │  prizes:" cr
  dict@+ swap 32 {
                    ."    │  ┌  prize_id:           " swap ._ cr
    8 u@+ swap      ."    │  │  prize_type:         " . cr
    64 u@+ swap     ."    │  │  prize_flags:        " . cr
    Gram@+ swap     ."    │  │  fixed_amount:       " .GR cr
    2 pick 64 < {
      32 u@+ swap   ."    │  │  fund_percentage:    " . ."/ 1000000" cr
                    ."    │  │" cr
      32 u@+ swap   ."    │  │  per_prize_probability:  " . ."/ 1000000" cr
      32 u@+ swap   ."    │  │  ticket_count:           " . cr
      32 u@+ swap   ."    │  │  per_ticket_probability: " . ."/ 1000000" cr
    } {
      32 u@+ swap     ."    │  └  fund_percentage:    " . ."/ 1000000" cr
    } cond
    
    drop -1
  } dictforeach
  drop
                        ."    │" cr
                        ."    │  participants:" cr
  dict@+ swap 256 {
                        ."    │  ┌  public_key:         " swap x. cr
    8 i@+ 256 u@+ -rot  ."    │  │  player_addr:        " 2dup @' true 7 + .Addr ." = " .addr cr
    Gram@+ swap         ."    │  │  received_amount:    " .GR cr
    32 u@+ swap         ."    │  │  ticket_count:       " . cr
    2 pick 64 = { // Blackjack's state
                        ."    │  │" cr
                        ."    │  │  cards:" cr
      dict@+ swap 8 {
        swap dup 255 < {
          ."    │  │    " 
          dup 128 < {
            ."player's #" ._
          } {
            ."dealer's #" 128 - ._
          } cond
          8 u@+ swap .":      " dup print-card() ." (" ._ .")" cr
        } {
          drop
        } cond
        drop
        -1
      } dictforeach
      drop
    } {
      dict@+ nip
    } cond
                        ."    │  └" cr
    drop
    -1
  } dictforeach
  drop
                        ."    │" cr
                        ."    │  last_results:" cr
  dict@+ swap 256 {
                        ."    │  ┌  public_key:         " over x. cr
    8 i@+ 256 u@+ -rot  ."    │  │  player_addr:        " 2dup @' true 7 + .Addr ." = " .addr cr
    Gram@+ swap         ."    │  │  received_amount:    " .GR cr
    32 u@+ swap         ."    │  │  ticket_count:       " . cr
    3 pick 64 = { // Blackjack's state
                        ."    │  │" cr
                        ."    │  │  cards:" cr
      dict@+ swap 8 {
        swap dup 255 < {
          ."    │  │    " 
          dup 128 < {
            ."player's #" ._
          } {
            ."dealer's #" 128 - ._
          } cond
          8 u@+ swap .":      " dup print-card() ." (" ._ .")" cr
        } {
          drop
        } cond
        drop
        -1
      } dictforeach
      drop
    } {
      dict@+ nip
    } cond
                        ."    │  │" cr
    Gram@+ swap         ."    │  │  total_prize_amount: " .GR cr
                        ."    │  │  prizes_won:" cr
    dict@+ swap 32 {
                        ."    │  │    #" over ._ .": " Gram@+ swap .GR
                        ." (" 32 u@+ swap dup . ."ticket" 1 > { ."s" } if .")" cr
      -1
    } dictforeach
    drop
                        ."    │  └" cr
    -1
  } dictforeach
  drop
  ."    └" cr
  drop drop -1
} dictforeach
drop